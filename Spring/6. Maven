Maven

Overview:
	-Specify dependencies to pom.xml file (generated by creating a maven project) => maven project will download all necessary Jar files for those projects during compile/run
	-maven first checks local repository to see if dependency are met, if not, goes to specified web pages to pull in the jar files
	-will also download supporting dependencies (ex: specifying spring will also download commons-logging)
	-portable between different IDE 
	-allows minimal local configuration before successful running
	
Key concepts
	POM file: Project Object Model file
		<project>
		structure:
			meta data: project name, version etc, output file type: jar,war
			-GAV: groupId,artifactId,version
				<groupId>com.allanudemy</..>
				<artifactId>mycoolapp</..>
				<version>1.0.FINAL</..>
				<packaging>jar</..>
				<name>mycoolapp</..>
				
			dependencies: list of projects we depend on, Spring/Hibernate/etc 
				<dependencies>
					<dependency>
						<groupId>junit></groupId>
						<artifactId>junit></artifactId>
						<version>3.8.1</version>
						<scope>test</scope>
					</dependency>
				</dependencies>
			plug ins: additional custom tasks to run: generate JUnit test reports etc 
		</project>
		
Finding dependencies
	ex: finding hibernate core
	1. hibernate.org 
		<dependency>
		  <groupId>org.hibernate</groupId>
		  <artifactId>hibernate-agroal</artifactId>
		  <version>5.3.15.Final</version>
		  <type>pom</type>
		</dependency>
	2. visit maven central repo search.maven.org  (best choice)
	3. mvnrepository.com  
	4. https://repo.maven.apache.org/maven2/
	
	if dependency is not in maven central repository, need to add <repository> in the <respositories> section in pom 
	
Maven archetypes (starter project):
	used to create new Maven project 
	maven-archetype-quickstart
	maven-archetype-webapp 

Updating prject after POM configuration
	ex: set compiler version to jdk 1.8 
	<properties>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>
	</properties>
	(right click) project -> maven -> update project
	
Additional repositories
<repositories>
	<repository>
		<id>atlassian</id>
		...
	</repository>
</respositories>

Common spring project repositories: 

	<properties>
		<springframework.version>5.0.6.RELEASE</springframework.version>
		<hibernate.version>5.4.1.Final</hibernate.version>
		<mysql.connector.version>5.1.45</mysql.connector.version>
		<c3po.version>0.9.5.2</c3po.version>

		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
	</properties>


	<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${springframework.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${springframework.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${springframework.version}</version>
		</dependency>

		<!-- Add Jackson for JSON converters -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.9.5</version>
		</dependency>

		<!-- Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>

		<!-- MySQL -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.connector.version}</version>
		</dependency>

		<!-- C3PO -->
		<dependency>
			<groupId>com.mchange</groupId>
			<artifactId>c3p0</artifactId>
			<version>${c3po.version}</version>
		</dependency>

		<!-- Servlet+JSP+JSTL -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>javax.servlet.jsp-api</artifactId>
			<version>2.3.1</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>